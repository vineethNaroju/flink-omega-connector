{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "so4Xb4l0RsOQ39vNiyRv5",
      "type": "text",
      "x": -1395.9036950612476,
      "y": -1390.8846988035993,
      "width": 479.8857421875,
      "height": 49.5867638785367,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a0",
      "roundness": null,
      "seed": 1983415392,
      "version": 621,
      "versionNonce": 1136747616,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859215720,
      "link": null,
      "locked": false,
      "text": "Flink Source Internals",
      "fontSize": 39.66941110282936,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Flink Source Internals",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "pK7urcZAF99zI_sPo8tyj",
      "type": "text",
      "x": -161.30900193021807,
      "y": -976.4034765543971,
      "width": 1111,
      "height": 150,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1",
      "roundness": null,
      "seed": 1790942624,
      "version": 1472,
      "versionNonce": 1285321120,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859164410,
      "link": null,
      "locked": false,
      "text": "interface Source<T, SplitT extends SourceSplit, EnumChkT>\n+ Boundedness getBoundedness()\n+ SplitEnumerator<SplitT, EnumChkT> createEnumerator(SplitEnumeratorContext<SplitT>...)\n+ SplitEnumerator<SplitT, EnumChkT> restoreEnumerator(SplitEnumeratorContext<SplitT>..., EnumChkT...)\n+ SimpleVersionedSerializer<SplitT> getSplitSerializer()\n+ SimpleVersionedSerializer<EnumChkT> getEnumeratorCheckpointSerializer()",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "interface Source<T, SplitT extends SourceSplit, EnumChkT>\n+ Boundedness getBoundedness()\n+ SplitEnumerator<SplitT, EnumChkT> createEnumerator(SplitEnumeratorContext<SplitT>...)\n+ SplitEnumerator<SplitT, EnumChkT> restoreEnumerator(SplitEnumeratorContext<SplitT>..., EnumChkT...)\n+ SimpleVersionedSerializer<SplitT> getSplitSerializer()\n+ SimpleVersionedSerializer<EnumChkT> getEnumeratorCheckpointSerializer()",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "grE7v1nwIwWNfd0DqaBC3",
      "type": "text",
      "x": -764.668035476114,
      "y": -732.7339176017724,
      "width": 957,
      "height": 250,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3",
      "roundness": null,
      "seed": 1492550048,
      "version": 1153,
      "versionNonce": 996369504,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859105920,
      "link": null,
      "locked": false,
      "text": "interface SourceReader<T, SplitT extends SourceSplit> extends CheckpointListener\n+ void start()\n+ InputStatus pollNext(ReaderOutput<T>...)\n+ List<SplitT> snapshotState(long checkpointId)\n+ CompletableFuture<Void> isAvailable()\n+ void addSplits(List<SplitT> splits)\n+ void notifyNoMoreSplits()\n+ default void handleSourceEvents(SourceEvent...) {}\n+ default void notifyCheckpointComplete(long checkpointId) {}\n+ default void pauseOrResumeSplits(Collection<String> pause, Collection<String> resume)",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "interface SourceReader<T, SplitT extends SourceSplit> extends CheckpointListener\n+ void start()\n+ InputStatus pollNext(ReaderOutput<T>...)\n+ List<SplitT> snapshotState(long checkpointId)\n+ CompletableFuture<Void> isAvailable()\n+ void addSplits(List<SplitT> splits)\n+ void notifyNoMoreSplits()\n+ default void handleSourceEvents(SourceEvent...) {}\n+ default void notifyCheckpointComplete(long checkpointId) {}\n+ default void pauseOrResumeSplits(Collection<String> pause, Collection<String> resume)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "UoJ6Mfv2OuiTg99QxGQe_",
      "type": "text",
      "x": -1165.6649420837978,
      "y": -595.2871769710573,
      "width": 198,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a4",
      "roundness": null,
      "seed": 715961440,
      "version": 458,
      "versionNonce": 1349226912,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859151904,
      "link": null,
      "locked": false,
      "text": "SourceSplit\n+ String splitId()",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "SourceSplit\n+ String splitId()",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ER08QjYmoURUgu-CDaKb5",
      "type": "text",
      "x": -1106.7231759171514,
      "y": -967.8774024889824,
      "width": 165,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a6",
      "roundness": null,
      "seed": 1115634784,
      "version": 161,
      "versionNonce": 665123936,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730858929040,
      "link": null,
      "locked": false,
      "text": "SplitAssignment",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "SplitAssignment",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "92qSD5nE41dBh9pWd5d99",
      "type": "text",
      "x": -325.816555087903,
      "y": -30.555651831972227,
      "width": 539,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a7",
      "roundness": null,
      "seed": 1002657888,
      "version": 1419,
      "versionNonce": 612507744,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859124188,
      "link": null,
      "locked": false,
      "text": "interface SourceOutput<T> extends WatermarkOutput\n+ void collect(T record)\n+ void collect(T record, long ts)",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "interface SourceOutput<T> extends WatermarkOutput\n+ void collect(T record)\n+ void collect(T record, long ts)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "pXYxz3RxzOjxglBbpqAsL",
      "type": "text",
      "x": -583.3860833903923,
      "y": 502.31659763351763,
      "width": 628.7800121307373,
      "height": 100,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a8",
      "roundness": null,
      "seed": 764465568,
      "version": 569,
      "versionNonce": 1976990112,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859131153,
      "link": null,
      "locked": false,
      "text": "class Watermark implements Serializable\n- static final ThreadLocal<SimpleDateFormat> TS_FORMATTER\n- long ts\n+ int hashCode() {Long.hashCode(ts)}",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class Watermark implements Serializable\n- static final ThreadLocal<SimpleDateFormat> TS_FORMATTER\n- long ts\n+ int hashCode() {Long.hashCode(ts)}",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "CPB3UpkxOyPjqjRUq63rD",
      "type": "text",
      "x": -1352.4350192641268,
      "y": -734.9286263920536,
      "width": 550,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aC",
      "roundness": null,
      "seed": 1545749920,
      "version": 451,
      "versionNonce": 964146272,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859150088,
      "link": null,
      "locked": false,
      "text": "interface CheckpointListener\n+ void notifyCheckpointComplete(long checkpointId)",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "interface CheckpointListener\n+ void notifyCheckpointComplete(long checkpointId)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "LyvoRM0PbjSd6FPa84-M0",
      "type": "text",
      "x": 1523.6938894447667,
      "y": -694.7687473654602,
      "width": 957,
      "height": 125,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aE",
      "roundness": null,
      "seed": 1489196128,
      "version": 764,
      "versionNonce": 11134048,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859156571,
      "link": null,
      "locked": false,
      "text": "interface SplitReader<E, SplitT extends SourceSplit>\n+ RecordsWithSplitIds<E> fetch()\n+ void handleSplitsChanges(SplitsChange<SplitT>...)\n+ void wakeUp()\n+ default void pauseOrResumeSplits(Collection<SplitT> pause, Collection<SplitT> resume)",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "interface SplitReader<E, SplitT extends SourceSplit>\n+ RecordsWithSplitIds<E> fetch()\n+ void handleSplitsChanges(SplitsChange<SplitT>...)\n+ void wakeUp()\n+ default void pauseOrResumeSplits(Collection<SplitT> pause, Collection<SplitT> resume)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "KLKP9L85FFUL_4wjIaPop",
      "type": "text",
      "x": 323.5545541453014,
      "y": 63.84702039309593,
      "width": 902,
      "height": 375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aG",
      "roundness": null,
      "seed": 219253856,
      "version": 1552,
      "versionNonce": 1915368544,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859094070,
      "link": null,
      "locked": false,
      "text": "abstract SplitFetcherManager<E, SplitT extends SourceSplit> \n\n- AtomicInteger fetcherIdGenerator;\n- FutureCompletingBlockingQueue<RecordsWithSplitIds<E>> elementQueue;\n- Map<Integer, SplitFetcher<E, SplitT>> fetchers;\n- AtomicInteger fetchersToShutDown;\n\n+ abstract void addSplits(List<SplitT>...)\n+ abstract void removeSplits(List<SplitT>...)\n+ void pauseOrResumeSplits(Collection<String> pause, Collection<String> resume) {}\n+ void startFetcher(SplitFetcher<E, SplitT> fetcher) {}\n+ synchronized SplitFetcher<E, SplitT> createSplitFetcher() {}\n+ boolean maybeShutdownFinishedFetchers() {}\n+ synchronized void close(long timeoutMs) {}\n",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "abstract SplitFetcherManager<E, SplitT extends SourceSplit> \n\n- AtomicInteger fetcherIdGenerator;\n- FutureCompletingBlockingQueue<RecordsWithSplitIds<E>> elementQueue;\n- Map<Integer, SplitFetcher<E, SplitT>> fetchers;\n- AtomicInteger fetchersToShutDown;\n\n+ abstract void addSplits(List<SplitT>...)\n+ abstract void removeSplits(List<SplitT>...)\n+ void pauseOrResumeSplits(Collection<String> pause, Collection<String> resume) {}\n+ void startFetcher(SplitFetcher<E, SplitT> fetcher) {}\n+ synchronized SplitFetcher<E, SplitT> createSplitFetcher() {}\n+ boolean maybeShutdownFinishedFetchers() {}\n+ synchronized void close(long timeoutMs) {}\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "jsWFP88ZtFEqbLzrlLsCn",
      "type": "text",
      "x": 1386.844127432267,
      "y": -449.87477395622705,
      "width": 902,
      "height": 775,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aH",
      "roundness": null,
      "seed": 1472237664,
      "version": 2335,
      "versionNonce": 1465596000,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859157738,
      "link": null,
      "locked": false,
      "text": "@PublicEvolving\nclass SplitFetcher<E, SplitT extends SourceSplit> implements Runnable\n \n- @GaurdedBy(\"lock\") Deque<SplitFetcherTask> taskQueue;\n- Map<String, SplitT> assignedSplits; \n- FutureCompletingBlockingQueue<RecordsWithSplitIds<E>> elementQueue;\n- SplitReader<E, SplitT> splitReader;\n- @GaurdedBy(\"lock\") boolean closed, paused;\n- FetchTask<E, SplitT> fetchTask;\n- @GaurdedBy(\"lock\") @Nullable SplitFetcherTask runningTask;\n- ReentrantLock lock;\n- @GaurdedBy(\"lock\") Condition nonEmpty, resumed;\n- boolean allowUnalignedSourceSplits;\n- CountDownLatch recordsProcessedLatch;\n\n+ void run() {}\n+ boolean runOnce() {}\n+ void processTaskResultUnsafe(SplitFetcherTask, boolean taskFinished) {}\n+ SplitFetcherTask getNextTaskUnsafe() {}\n+ void addSplits(List<SplitT>...) {}\n+ void removeSplits(List<SplitT>...) {}\n+ void pauseOrResumeSplits(Collection<SplitT> pause, Collection<SplitT> resume) {}\n+ void enqueueTask(SplitFetcherTask) {}\n+ void enqueueTaskUnsafe(SplitFetcherTask) {} \n+ void shutdown(boolean waitingForRecordsProcessed) {}\n+ boolean isIdle() {}\n+ void wakeUp(boolean taskOnly) {}\n+ void wakeUpUnsafe(boolean taskOnly) {}\n+ void pause() {}\n+ void resume() {}\n ",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "@PublicEvolving\nclass SplitFetcher<E, SplitT extends SourceSplit> implements Runnable\n \n- @GaurdedBy(\"lock\") Deque<SplitFetcherTask> taskQueue;\n- Map<String, SplitT> assignedSplits; \n- FutureCompletingBlockingQueue<RecordsWithSplitIds<E>> elementQueue;\n- SplitReader<E, SplitT> splitReader;\n- @GaurdedBy(\"lock\") boolean closed, paused;\n- FetchTask<E, SplitT> fetchTask;\n- @GaurdedBy(\"lock\") @Nullable SplitFetcherTask runningTask;\n- ReentrantLock lock;\n- @GaurdedBy(\"lock\") Condition nonEmpty, resumed;\n- boolean allowUnalignedSourceSplits;\n- CountDownLatch recordsProcessedLatch;\n\n+ void run() {}\n+ boolean runOnce() {}\n+ void processTaskResultUnsafe(SplitFetcherTask, boolean taskFinished) {}\n+ SplitFetcherTask getNextTaskUnsafe() {}\n+ void addSplits(List<SplitT>...) {}\n+ void removeSplits(List<SplitT>...) {}\n+ void pauseOrResumeSplits(Collection<SplitT> pause, Collection<SplitT> resume) {}\n+ void enqueueTask(SplitFetcherTask) {}\n+ void enqueueTaskUnsafe(SplitFetcherTask) {} \n+ void shutdown(boolean waitingForRecordsProcessed) {}\n+ boolean isIdle() {}\n+ void wakeUp(boolean taskOnly) {}\n+ void wakeUpUnsafe(boolean taskOnly) {}\n+ void pause() {}\n+ void resume() {}\n ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "oDC_DkTlGuJAEoNz_1l8P",
      "type": "text",
      "x": 371.7125525703468,
      "y": -727.2597005747302,
      "width": 1034,
      "height": 225,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aI",
      "roundness": null,
      "seed": 693948512,
      "version": 1501,
      "versionNonce": 941208672,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859085687,
      "link": null,
      "locked": false,
      "text": "interface SplitEnumerator<SplitT extends SourceSplit, CheckpointT> extends CheckpointListener \n+ void start()\n+ void handleSplitRequest(int subtaskId, @Nullable String requesterHostName)\n+ void addSplitsBack(List<SplitT> splits, int subtaskId)\n+ void addReader(int subtaskId)\n+ CheckpointT snapshotState(long checkpointId)\n+ void close()\n+ default void notifyCheckpointComplete(long checkpointId) {/*empty*/}\n+ default void handleSourceEvent(int subtaskId, SourceEvent sourceEvent) {/*empty*/}",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "interface SplitEnumerator<SplitT extends SourceSplit, CheckpointT> extends CheckpointListener \n+ void start()\n+ void handleSplitRequest(int subtaskId, @Nullable String requesterHostName)\n+ void addSplitsBack(List<SplitT> splits, int subtaskId)\n+ void addReader(int subtaskId)\n+ CheckpointT snapshotState(long checkpointId)\n+ void close()\n+ default void notifyCheckpointComplete(long checkpointId) {/*empty*/}\n+ default void handleSourceEvent(int subtaskId, SourceEvent sourceEvent) {/*empty*/}",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "BwsoRVn_dbL35yv8K-DiE",
      "type": "text",
      "x": 340.37457443828134,
      "y": -406.15838272673113,
      "width": 979,
      "height": 325,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aJ",
      "roundness": null,
      "seed": 392292448,
      "version": 1529,
      "versionNonce": 1654292576,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859087654,
      "link": null,
      "locked": false,
      "text": "interface SplitEnumeratorContext<SplitT extends SourceSplit>\n+ SplitEnumeratorMetricGroup metricGroup()\n+ void sendEventToSourceReader(int subtaskId, SourceEvent)\n+ int currentParallelism()\n+ Map<Integer, ReaderInfo> registeredReaders()\n+ Map<Integer, Map<Integer, ReaderInfo>> registeredReadersOfAttempts()\n+ void assignSplits(SplitsAssignment<SplitT>..)\n+ default void assignSplit(SplitT split, int subtask)\n+ void signalNoMoreSplits(int subtask)\n+ <T> void callAsync(Callable<T> callable, BiConsumer<T, Throwable> handler)\n+ <T> void callAsync(Callable<T>, BiConsumer<T,Throwable>, long initialDelayMs, periodMs)\n+ void runInCoordinatorThread(Runnable runnable)\n+ default void setIsProcessingBacklog(boolean isProcessingBacklog) {}",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "interface SplitEnumeratorContext<SplitT extends SourceSplit>\n+ SplitEnumeratorMetricGroup metricGroup()\n+ void sendEventToSourceReader(int subtaskId, SourceEvent)\n+ int currentParallelism()\n+ Map<Integer, ReaderInfo> registeredReaders()\n+ Map<Integer, Map<Integer, ReaderInfo>> registeredReadersOfAttempts()\n+ void assignSplits(SplitsAssignment<SplitT>..)\n+ default void assignSplit(SplitT split, int subtask)\n+ void signalNoMoreSplits(int subtask)\n+ <T> void callAsync(Callable<T> callable, BiConsumer<T, Throwable> handler)\n+ <T> void callAsync(Callable<T>, BiConsumer<T,Throwable>, long initialDelayMs, periodMs)\n+ void runInCoordinatorThread(Runnable runnable)\n+ default void setIsProcessingBacklog(boolean isProcessingBacklog) {}",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "bMGWNJkAChycRihpa2DZj",
      "type": "text",
      "x": -420.1200069545207,
      "y": -319.0052231251305,
      "width": 660,
      "height": 225,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aM",
      "roundness": null,
      "seed": 1972710496,
      "version": 917,
      "versionNonce": 1669351840,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859113955,
      "link": null,
      "locked": false,
      "text": "interface SourceReaderContext\n+ SourceReaderMetricGroup metricGroup()\n+ Configuration getConfiguration()\n+ String getLocalHostName()\n+ int getIndexOfSubtask()\n+ void sentSplitRequest()\n+ void sendSourceEventToCoordinator(SourceEvent sourceEvent)\n+ UserCodeClassLoader getUserCodeClassLoader()\n+ default int currentParallelism()",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "interface SourceReaderContext\n+ SourceReaderMetricGroup metricGroup()\n+ Configuration getConfiguration()\n+ String getLocalHostName()\n+ int getIndexOfSubtask()\n+ void sentSplitRequest()\n+ void sendSourceEventToCoordinator(SourceEvent sourceEvent)\n+ UserCodeClassLoader getUserCodeClassLoader()\n+ default int currentParallelism()",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "9XuAKoTMnE_2EhC1AzheO",
      "type": "text",
      "x": -1246.8204141538326,
      "y": -443.6958335437371,
      "width": 891,
      "height": 925,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aP",
      "roundness": null,
      "seed": 1756416416,
      "version": 2078,
      "versionNonce": 1432520800,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859108537,
      "link": null,
      "locked": false,
      "text": "abstract SourceReaderBase<E, T, SplitT extends SourceSplit, SplitStateT>\n         implements SourceReader<T, SplitT> \n\n- FutureCompletingBlockingQueue<RecordsWithSplitIds<E>> elementsQueue\n- Map<String, SplitContext<T, SplitStateT>> splitStates\n- RecordEmitter<E, T, SplitStateT> recordEmitter\n- SplitFetcherManager<E, SplitT> splitFetcherManager\n- SourceReaderOptions options\n- Configuration config\n- SourceReaderContext context\n- RecordsWithSplitIds<E> currentFetch;\n- SplitContext<T, SplitStateT> currentSplitContext\n- SourceOutput<T> currentSplitOutput\n- boolean noMoreSplitsAssignment\n- RecordEvaluator<T> eofRecordEvaluator\n\n+ void start() \n+ InputStatus pollNext(RecordOutput<T> output) {}\n+ InputStatus trace(InputStatus status) {}\n+ RecordsWithSplitIds<E> getNextFetch(ReaderOutput<T> output) {}\n+ void finishCurrentFetch(RecordsWithSplitIds<E> fetch, ReaderOutput<T> output)\n+ boolean moveToNextSplit(RecordsWithSplitIds<E> records, ReaderOutput<T> output)\n+ CompletableFuture<Void> isAvailable()\n+ List<SplitT> snapshotState(long checkpointId)\n+ void addSplits(List<SplitT> splits)\n+ void notifyNoMoreSplits()\n+ void handleSourceEvents(SourceEvent event)\n+ void pauseOrResumeSplits(Collection<String> pause, Collection<String> resume)\n+ abstract void onSplitFinished(Map<String, SplitStateT>)\n+ abstract SplitStateT initializedState(SplitT split)\n+ abstract SplitT toSplitType(String splitId, SplitStateT state)\n\n& class SourceOutputWrapper<T> implements SourceOutput<T> \n  - SourceOutput<T> sourceOutput\n  - Function<T, Boolean> eofRecordHandler\n\n",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "abstract SourceReaderBase<E, T, SplitT extends SourceSplit, SplitStateT>\n         implements SourceReader<T, SplitT> \n\n- FutureCompletingBlockingQueue<RecordsWithSplitIds<E>> elementsQueue\n- Map<String, SplitContext<T, SplitStateT>> splitStates\n- RecordEmitter<E, T, SplitStateT> recordEmitter\n- SplitFetcherManager<E, SplitT> splitFetcherManager\n- SourceReaderOptions options\n- Configuration config\n- SourceReaderContext context\n- RecordsWithSplitIds<E> currentFetch;\n- SplitContext<T, SplitStateT> currentSplitContext\n- SourceOutput<T> currentSplitOutput\n- boolean noMoreSplitsAssignment\n- RecordEvaluator<T> eofRecordEvaluator\n\n+ void start() \n+ InputStatus pollNext(RecordOutput<T> output) {}\n+ InputStatus trace(InputStatus status) {}\n+ RecordsWithSplitIds<E> getNextFetch(ReaderOutput<T> output) {}\n+ void finishCurrentFetch(RecordsWithSplitIds<E> fetch, ReaderOutput<T> output)\n+ boolean moveToNextSplit(RecordsWithSplitIds<E> records, ReaderOutput<T> output)\n+ CompletableFuture<Void> isAvailable()\n+ List<SplitT> snapshotState(long checkpointId)\n+ void addSplits(List<SplitT> splits)\n+ void notifyNoMoreSplits()\n+ void handleSourceEvents(SourceEvent event)\n+ void pauseOrResumeSplits(Collection<String> pause, Collection<String> resume)\n+ abstract void onSplitFinished(Map<String, SplitStateT>)\n+ abstract SplitStateT initializedState(SplitT split)\n+ abstract SplitT toSplitType(String splitId, SplitStateT state)\n\n& class SourceOutputWrapper<T> implements SourceOutput<T> \n  - SourceOutput<T> sourceOutput\n  - Function<T, Boolean> eofRecordHandler\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Hj51wcwvMBVZFK0j9211i",
      "type": "text",
      "x": -260.93900817518784,
      "y": 218.36673183108394,
      "width": 363,
      "height": 100,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aR",
      "roundness": null,
      "seed": 2055025760,
      "version": 439,
      "versionNonce": 2023999904,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859126670,
      "link": null,
      "locked": false,
      "text": "interface WatermarkOutput \n+ void emitWatermark(Watermark w)\n+ void markIdle()\n+ void markActive()",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "interface WatermarkOutput \n+ void emitWatermark(Watermark w)\n+ void markIdle()\n+ void markActive()",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "P-skWiMo32M2aUq8XtARd",
      "type": "line",
      "x": 267.90884974245114,
      "y": -778.2474591117551,
      "width": 6.637533805685052,
      "height": 1776.6391116422924,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aS",
      "roundness": null,
      "seed": 185773472,
      "version": 209,
      "versionNonce": 1311349856,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1730859082887,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -6.637533805685052,
          1776.6391116422924
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}